{"ast":null,"code":"import _defineProperty from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Quest_App/client/src/components/QuestionsList.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getQuestions, deleteQuestion, addQuestion, oneQuestion } from '../actions/questionActions';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { hashHistory } from 'react-router';\n\nvar QuestionsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuestionsList, _Component);\n\n  function QuestionsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuestionsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuestionsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      questionId: null // modal: false,\n      // text: '',\n      // answer: this.text,\n      // description: this.Desc\n\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.onDeleteClick = function (id) {\n      _this.props.deleteQuestion(id);\n    };\n\n    _this.onChange1 = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(QuestionsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getQuestions();\n    }\n  }, {\n    key: \"render\",\n    // onFocusClick=(id)=>{\n    //     this.setState.questionId=this.props.oneQuestion(id)\n    // }\n    value: function render() {\n      var questionItems = this.props.question.questionItems;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(TransitionGroup, {\n        className: \"QuestContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Questions\"), questionItems.map(function (_ref) {\n        var _id = _ref._id,\n            question = _ref.question,\n            description = _ref.description;\n        return React.createElement(CSSTransition, {\n          key: _id,\n          timeout: 500,\n          classNames: \"fade\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(ListGroupItem, {\n          className: \"questionLi column1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"questionContent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, question), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"answerbutton\",\n          color: \"success\",\n          size: \"sm\" // onClick={()=>(\n          //         hashHistory.push('/AnswerList')\n          // )}\n          // {this.onAnswerClick.bind(this)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(Link, {\n          style: {\n            textDecoration: 'none',\n            color: 'white'\n          },\n          className: \"answer\",\n          to: \"./AnswerList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Answer\")))))));\n      }))));\n    }\n  }]);\n\n  return QuestionsList;\n}(Component);\n\nQuestionsList.propTypes = {\n  getQuestions: PropTypes.func.isRequired,\n  question: PropTypes.object.isRequired,\n  description: PropTypes.object.isRequired,\n  oneQuestion: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    question: state.question,\n    description: state.description,\n    oneQuestion: state.oneQuestion\n  };\n}; // export default QuestionsList;\n\n\nexport default connect(mapStateToProps, {\n  getQuestions: getQuestions,\n  deleteQuestion: deleteQuestion,\n  addQuestion: addQuestion,\n  oneQuestion: oneQuestion\n})(QuestionsList);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Quest_App/client/src/components/QuestionsList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","CSSTransition","TransitionGroup","connect","getQuestions","deleteQuestion","addQuestion","oneQuestion","PropTypes","withRouter","Link","hashHistory","QuestionsList","state","questionId","toggle","setState","modal","onDeleteClick","id","props","onChange1","event","target","name","value","questionItems","question","map","_id","description","textDecoration","color","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Container, ListGroup, ListGroupItem, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport {connect} from 'react-redux';\nimport {getQuestions, deleteQuestion, addQuestion, oneQuestion} from '../actions/questionActions';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\nimport { hashHistory } from 'react-router';\nclass QuestionsList extends Component{\n    state={\n        questionId:null,\n        // modal: false,\n        // text: '',\n        // answer: this.text,\n        // description: this.Desc\n    }\n    componentDidMount(){\n        this.props.getQuestions();\n    }\n\n    toggle= () =>{\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n    onDeleteClick=(id)=>{\n        this.props.deleteQuestion(id);\n    }\n    // onAnswerClick=()=>{\n\n    //     browserHistory.push('/AnswerList');\n        \n    // }\n    onChange1=(event)=>{\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    // onFocusClick=(id)=>{\n    //     this.setState.questionId=this.props.oneQuestion(id)\n    // }\n\n\n    render(){\n        const {questionItems } =this.props.question;\n        return(\n            <Container>            \n                <ListGroup>\n                    <TransitionGroup className=\"QuestContainer\">\n                    <hr/>\n                        <h1>Questions</h1>\n                        {questionItems.map(({_id, question, description})=>(\n                            \n                            <CSSTransition key={_id} timeout={500} classNames='fade'>\n                            <div className=\"row1\">\n                                <ListGroupItem className=\"questionLi column1\">\n                                    <div className=\"questionContent\">\n                                            <div>{question}</div>\n                                        \n                                        {/* {description} */}\n                                        <br/>\n                                        <center>\n                                        \n                                        <Button\n                                        className=\"answerbutton\"\n                                            color=\"success\"\n                                            size=\"sm\"\n                                            // onClick={()=>(\n                                                \n                                            //         hashHistory.push('/AnswerList')\n                                                \n                                            // )}\n                                            // {this.onAnswerClick.bind(this)}\n                                        ><Link style={{ textDecoration: 'none' , color: 'white'}} className='answer' to=\"./AnswerList\">Answer</Link></Button>\n                                        {/* <Button\n                                            className=\"remove-btn\"\n                                            color=\"secondary\"\n                                            size=\"sm\"\n                                            onClick={this.onDeleteClick.bind(this, _id)}\n                                            >\n                                            Delete\n                                        </Button> */}\n                                        </center>\n                                    </div>\n                                </ListGroupItem>\n                            </div>\n                               \n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                </ListGroup>\n            {/* <p>{questionItems\n                .filter(questionItems => questionItems._id === this.state.questionId)\n                .map(questionItems=>questionItems.question)\n                }</p> */}\n                 {/* { this.props.oneQuestion\n                    ? this.props.oneQuestion.map(item =>\n                    <this.renderData key={item.id} item={item} />)\n                    : null\n                } */}\n                {/* <div>\n                {this.props.oneQuestion.map(({_id, question})=>{\n                    <p key={_id}>{question}</p>\n                })}\n                \n                </div> */}\n            </Container>\n        )\n    }\n}\n\nQuestionsList.propTypes={\n    getQuestions:PropTypes.func.isRequired,\n    question:PropTypes.object.isRequired,\n    description:PropTypes.object.isRequired,\n    oneQuestion:PropTypes.func.isRequired\n\n}\n\nconst mapStateToProps =(state)=>({\n    question:state.question,\n    description:state.description,\n    oneQuestion: state.oneQuestion\n});\n\n// export default QuestionsList;\nexport default connect(mapStateToProps, {getQuestions, deleteQuestion, addQuestion, oneQuestion})(QuestionsList);"]},"metadata":{},"sourceType":"module"}