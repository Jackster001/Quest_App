{"ast":null,"code":"import _classCallCheck from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jackie/Desktop/Projects/Quest_App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jackie/Desktop/Projects/Quest_App/client/src/components/dashboard/dashboard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profileActions'; // import Spinner from '../common/Spinner';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getCurrentProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const { user } = this.props.auth;\n      // const { profile, loading } = this.props.profile;\n      // let dashboardContent;\n      // if (profile === null || loading) {\n      // //   dashboardContent = <Spinner />;\n      // } else {\n      //   // Check if logged in user has profile data\n      //   if (Object.keys(profile).length > 0) {\n      //     dashboardContent = <h4>TODO: DISPLAY PROFILE</h4>;\n      //   } else {\n      //     // User is logged in but has no profile\n      //     dashboardContent = (\n      //       <div>\n      //         <p className=\"lead text-muted\">Welcome {user.name}</p>\n      //         <p>You have not yet setup a profile, please add some info</p>\n      //         <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\n      //           Create Profile\n      //         </Link>\n      //       </div>\n      //     );\n      //   }\n      // }\n      return React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Dashboard\")))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Quest_App/client/src/components/dashboard/dashboard.js"],"names":["React","Component","Link","PropTypes","connect","getCurrentProfile","Dashboard","props","propTypes","func","isRequired","auth","object","profile","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC,C,CACA;;IAEMC,S;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWF,iBAAX;AACD;;;6BAEQ;AACP;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF,CADF,CADF;AAYD;;;;EA3CqBJ,S;;AA8CxBK,SAAS,CAACE,SAAV,GAAsB;AACpBH,EAAAA,iBAAiB,EAAEF,SAAS,CAACM,IAAV,CAAeC,UADd;AAEpBC,EAAAA,IAAI,EAAER,SAAS,CAACS,MAAV,CAAiBF,UAFH;AAGpBG,EAAAA,OAAO,EAAEV,SAAS,CAACS,MAAV,CAAiBF;AAHN,CAAtB;;AAMA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCF,IAAAA,OAAO,EAAEE,KAAK,CAACF,OADiB;AAEhCF,IAAAA,IAAI,EAAEI,KAAK,CAACJ;AAFoB,GAAL;AAAA,CAA7B;;AAKA,eAAeP,OAAO,CAACU,eAAD,EAAkB;AAAET,EAAAA,iBAAiB,EAAjBA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile } from '../../actions/profileActions';\r\n// import Spinner from '../common/Spinner';\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getCurrentProfile();\r\n  }\r\n\r\n  render() {\r\n    // const { user } = this.props.auth;\r\n    // const { profile, loading } = this.props.profile;\r\n\r\n    // let dashboardContent;\r\n\r\n    // if (profile === null || loading) {\r\n    // //   dashboardContent = <Spinner />;\r\n    // } else {\r\n    //   // Check if logged in user has profile data\r\n    //   if (Object.keys(profile).length > 0) {\r\n    //     dashboardContent = <h4>TODO: DISPLAY PROFILE</h4>;\r\n    //   } else {\r\n    //     // User is logged in but has no profile\r\n    //     dashboardContent = (\r\n    //       <div>\r\n    //         <p className=\"lead text-muted\">Welcome {user.name}</p>\r\n    //         <p>You have not yet setup a profile, please add some info</p>\r\n    //         <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\r\n    //           Create Profile\r\n    //         </Link>\r\n    //       </div>\r\n    //     );\r\n    //   }\r\n    // }\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4\">Dashboard</h1>\r\n              {/* {dashboardContent} */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}