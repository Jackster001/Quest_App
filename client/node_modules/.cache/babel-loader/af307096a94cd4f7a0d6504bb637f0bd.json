{"ast":null,"code":"import axios from 'axios';\nimport { GET_QUESTIONS, GET_SPECIFIC_QUESTION, ADD_QUESTION, DELETE_QUESTION, QUESTIONS_LOADING, UPDATE_ANSWER } from './types';\nexport var getQuestions = function getQuestions() {\n  return function (dispatch) {\n    // return{\n    //     type: GET_QUESTIONS\n    // };\n    dispatch(setQuestionsLoading());\n    axios.get('/api/items').then(function (res) {\n      return dispatch({\n        type: GET_QUESTIONS,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var addQuestion = function addQuestion(item) {\n  return function (dispatch) {\n    axios.post('/api/items', item).then(function (res) {\n      return dispatch({\n        type: ADD_QUESTION,\n        payload: res.data\n      });\n    });\n  };\n}; // HERE IS THE SOLUTION\n\nexport var oneQuestion = function oneQuestion(id) {\n  return function (dispatch) {\n    var identity = \"\" + id;\n    axios.get('/api/items/' + identity).then(function (res) {\n      return dispatch({\n        type: GET_SPECIFIC_QUESTION,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var addAnswer = function addAnswer(id, answer) {\n  return function (dispatch) {\n    var identity = \"\" + id;\n    axios.post('/api/items/' + identity, answer).then(function (res) {\n      return dispatch({\n        type: UPDATE_ANSWER,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var deleteQuestion = function deleteQuestion(id) {\n  return function (dispatch) {\n    var identity = \"\" + id;\n    axios.delete('/api/items/' + identity).then(function (res) {\n      return dispatch({\n        type: DELETE_QUESTION,\n        payload: id\n      });\n    });\n  };\n};\nexport var setQuestionsLoading = function setQuestionsLoading() {\n  return {\n    type: QUESTIONS_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/jackie/Desktop/Projects/Quest_App/client/src/actions/questionActions.js"],"names":["axios","GET_QUESTIONS","GET_SPECIFIC_QUESTION","ADD_QUESTION","DELETE_QUESTION","QUESTIONS_LOADING","UPDATE_ANSWER","getQuestions","dispatch","setQuestionsLoading","get","then","res","type","payload","data","addQuestion","item","post","oneQuestion","id","identity","addAnswer","answer","deleteQuestion","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,qBAAtB,EAA6CC,YAA7C,EAA2DC,eAA3D,EAA4EC,iBAA5E,EAA+FC,aAA/F,QAAmH,SAAnH;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC1C;AACA;AACA;AACAA,IAAAA,QAAQ,CAACC,mBAAmB,EAApB,CAAR;AACAT,IAAAA,KAAK,CACAU,GADL,CACS,YADT,EAEKC,IAFL,CAEU,UAAAC,GAAG;AAAA,aACLJ,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEZ,aADD;AAELa,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CADH;AAAA,KAFb;AAQH,GAb2B;AAAA,CAArB;AAcP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD;AAAA,SAAU,UAAAT,QAAQ,EAAI;AAC7CR,IAAAA,KAAK,CACJkB,IADD,CACM,YADN,EACoBD,IADpB,EAECN,IAFD,CAEM,UAAAC,GAAG;AAAA,aACLJ,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEV,YADD;AAELW,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CADH;AAAA,KAFT;AAOH,GAR0B;AAAA,CAApB,C,CASP;;AACA,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAAC,EAAE;AAAA,SAAI,UAAAZ,QAAQ,EAAG;AACxC,QAAIa,QAAQ,GAAC,KAAGD,EAAhB;AACApB,IAAAA,KAAK,CAACU,GAAN,CAAU,gBAAcW,QAAxB,EAAkCV,IAAlC,CAAuC,UAAAC,GAAG;AAAA,aACtCJ,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEX,qBADD;AAELY,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CAD8B;AAAA,KAA1C;AAKH,GAP4B;AAAA,CAAtB;AAQP,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACF,EAAD,EAAIG,MAAJ;AAAA,SAAc,UAAAf,QAAQ,EAAG;AAC9C,QAAIa,QAAQ,GAAC,KAAGD,EAAhB;AACApB,IAAAA,KAAK,CACJkB,IADD,CACM,gBAAcG,QADpB,EAC6BE,MAD7B,EAECZ,IAFD,CAEM,UAAAC,GAAG;AAAA,aAAIJ,QAAQ,CAAC;AAClBK,QAAAA,IAAI,EAAEP,aADY;AAElBQ,QAAAA,OAAO,EAACF,GAAG,CAACG;AAFM,OAAD,CAAZ;AAAA,KAFT;AAMH,GARwB;AAAA,CAAlB;AASP,OAAO,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAAAJ,EAAE;AAAA,SAAI,UAAAZ,QAAQ,EAAI;AAC5C,QAAIa,QAAQ,GAAC,KAAGD,EAAhB;AACApB,IAAAA,KAAK,CAACyB,MAAN,CAAa,gBAAcJ,QAA3B,EAAqCV,IAArC,CAA0C,UAAAC,GAAG;AAAA,aACzCJ,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAET,eADD;AAELU,QAAAA,OAAO,EAAEM;AAFJ,OAAD,CADiC;AAAA,KAA7C;AAMH,GAR+B;AAAA,CAAzB;AASP,OAAO,IAAMX,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACrC,SAAM;AACFI,IAAAA,IAAI,EAAER;AADJ,GAAN;AAGH,CAJM","sourcesContent":["import axios from 'axios';\nimport {GET_QUESTIONS,GET_SPECIFIC_QUESTION, ADD_QUESTION, DELETE_QUESTION, QUESTIONS_LOADING, UPDATE_ANSWER} from './types';\n\nexport const getQuestions = () => dispatch => {\n    // return{\n    //     type: GET_QUESTIONS\n    // };\n    dispatch(setQuestionsLoading());\n    axios\n        .get('/api/items')\n        .then(res =>\n            dispatch({\n                type: GET_QUESTIONS,\n                payload: res.data\n            })\n        )\n};\nexport const addQuestion = (item) => dispatch => {\n    axios\n    .post('/api/items', item)\n    .then(res=> \n        dispatch({\n            type: ADD_QUESTION,\n            payload: res.data\n    }))\n};\n// HERE IS THE SOLUTION\nexport const oneQuestion = id => dispatch =>{\n    var identity=\"\"+id;\n    axios.get('/api/items/'+identity).then(res =>\n        dispatch({\n            type: GET_SPECIFIC_QUESTION,\n            payload: res.data\n        }))\n}\nexport const addAnswer = (id,answer)=> dispatch =>{\n    var identity=\"\"+id;\n    axios\n    .post('/api/items/'+identity,answer)\n    .then(res => dispatch({\n        type: UPDATE_ANSWER,\n        payload:res.data\n    }))\n}\nexport const deleteQuestion = id => dispatch => {\n    var identity=\"\"+id;\n    axios.delete('/api/items/'+identity).then(res =>\n        dispatch({\n            type: DELETE_QUESTION,\n            payload: id\n        })\n    )\n};\nexport const setQuestionsLoading = () => {\n    return{\n        type: QUESTIONS_LOADING\n    };\n};\n"]},"metadata":{},"sourceType":"module"}